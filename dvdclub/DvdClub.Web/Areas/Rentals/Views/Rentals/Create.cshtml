@model DvdClub.Web.Areas.Rentals.Models.RentalsCreateBindingModel

@{
    ViewBag.Title = "Create";
}

<h2>Rent</h2>

@using( Html.BeginForm() ) {
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Rental A Movie</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Emails, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(x => x.UserId, new SelectList(Model.Emails, "Id", "Email"), new { @class = "form-control" })<!--couldd default after new selectlist-->
            @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.MovieTitles, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(x => x.MovieId, new SelectList(Model.MovieTitles, "Id", "Title"), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
        </div>
    </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>





<!--<div class="form-horizontal">
    <hr />
    <!--for the dropdown users-->
    @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
    <!--<div class="form-group">-->
        @*@Html.LabelFor(model => model.Emails, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <!--<div class="col-md-10">-->
            @*@Html.DropDownList("Emails", Model.Emails, new { @class = "form-control" })*@
            @*@Html.DropDownListFor(model => model.Emails,  new SelectList(Model.Emails), new { htmlAttributes = new { @class = "form-control" } })*@
            @*@Html.DropDownList(model => model.id, new { @class = "form-control" })*@
            @*@Html.DropDownListFor(model => model.EmailsSelectList, new SelectList(Model.MovieTitlesSelectList), htmlAttributes: new { @class = "form-control" })*@
            @*@Html.DropDownList(model => model.MovieTitlesSelectList, null, new { @class = "form-control" })*@


            @*@Html.DropDownList("EmailsSelectList", null, new { @class = "form-control" })*@

            @*@Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })*@
        <!--</div>
    </div>

    <div class="form-group">-->
        @*@Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <!--<div class="col-md-10">-->
            @*@Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })*@
            @*@Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })*@
        <!--</div>
    </div>-->

    <!--for the dropdown movies-->
    <!--<div class="form-group">-->
        @*@Html.LabelFor(model => model.MovieTitles, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <!--<div class="col-md-10">-->
            <!--the name has to match the method i.e. not MovieTitle"s"-->
            @*@Html.DropDownListFor(model => model.MovieTitles, Model.MovieTitles, new { htmlAttributes = new { @class = "form-control" } })*@
            @*@Html.DropDownListFor(model => model.MovieTitles, null, htmlAttributes: new { @class = "form-control" })*@
            @*@Html.DropDownListFor(model => model.MovieTitlesSelectList, null, htmlAttributes : new { @class = "form-control" } )*@
            @*@Html.DropDownList("MovieTitle", (IEnumerable<SelectListItem>)ViewBag.MovieTitles, new { @class = "form-control" })*@
            @*@Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })*@
        @*</div>
    </div>*@

    @*<div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="CreateWithMovieSelected" class="btn btn-default" />
        </div>
    </div>
</div>
}-->*@